name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build
        run: npm run build
      
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_KEY }}
          known_hosts: unnecessary
          if_key_exists: replace
      
      - name: Adding Known Hosts
        run: ssh-keyscan -H ${{ secrets.DEPLOY_HOST }} >> ~/.ssh/known_hosts
      
      - name: Prepare Deployment Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          use_insecure_cipher: true
          command_timeout: "1m"
          script_stop: true
          script: |
            # Buat direktori jika belum ada
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S mkdir -p ${{ secrets.DEPLOY_PATH }}
            # Setel izin sementara untuk user deploy
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S chown -R ${{ secrets.DEPLOY_USER }}:${{ secrets.DEPLOY_USER }} ${{ secrets.DEPLOY_PATH }}
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S chmod -R 775 ${{ secrets.DEPLOY_PATH }}
      
      - name: Deploy with rsync
        run: |
          rsync -avz --delete ./dist/ ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:${{ secrets.DEPLOY_PATH }}
      
      - name: Set Final Permissions and Restart Nginx
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          use_insecure_cipher: true
          command_timeout: "1m"
          script_stop: true
          script: |
            # Setel izin final untuk web server
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S chown -R www-data:www-data ${{ secrets.DEPLOY_PATH }}
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S chmod -R 755 ${{ secrets.DEPLOY_PATH }}
            
            # Buat konfigurasi Nginx
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S bash -c 'cat > /etc/nginx/sites-available/default << EOL
            server {
                listen 80;
                server_name _;
                root ${{ secrets.DEPLOY_PATH }};
                index index.html;

                # Handle SPA routing
                location / {
                    try_files \$uri \$uri/ /index.html;
                }

                # Handle /poke-fahmi path
                location /poke-fahmi {
                    alias ${{ secrets.DEPLOY_PATH }};
                    try_files \$uri \$uri/ /index.html;
                    if (!-e \$request_filename) {
                        rewrite ^(.*)$ /index.html break;
                    }
                }

                # Handle static files
                location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                    expires max;
                    log_not_found off;
                }
            }
            EOL'
            
            # Hapus konfigurasi default yang mungkin mengganggu
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S rm -f /etc/nginx/sites-enabled/default
            
            # Aktifkan konfigurasi baru
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S ln -sf /etc/nginx/sites-available/default /etc/nginx/sites-enabled/
            
            # Periksa konfigurasi Nginx
            echo "Checking Nginx configuration..."
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S nginx -t
            
            # Periksa error log Nginx
            echo "Checking Nginx error log..."
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S tail -n 50 /var/log/nginx/error.log
            
            # Periksa struktur file
            echo "Checking file structure..."
            ls -la ${{ secrets.DEPLOY_PATH }}
            
            # Restart Nginx
            echo "Restarting Nginx..."
            echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S systemctl restart nginx
            
            # Verifikasi status
            systemctl status nginx
